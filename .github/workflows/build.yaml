name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install QEMU User-Mode Emulation
        run: sudo apt-get update && sudo apt-get install -y qemu-user

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64,linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
          cache-dependency-path: go.mod

      # Removed the existing UPX installation step
      # - name: Install UPX
      #   run: sudo apt-get update && sudo apt-get install -y upx

      #      - name: Run Go linters
      #        run: |
      #          go fmt ./...
      #          go vet ./...
      #          golint ./...
      #          staticcheck ./...

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          set -ex
          mkdir -p dist/${{ matrix.goos }}-${{ matrix.goarch }}
          go build -ldflags "-s -w" -o dist/${{ matrix.goos }}-${{ matrix.goarch }}/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Verify Binary is Statically Linked
        run: |
          set -ex
          # Display the file type
          file dist/${{ matrix.goos }}-${{ matrix.goarch }}/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }}
          
          # Run ldd and check its exit status
          if ldd dist/${{ matrix.goos }}-${{ matrix.goarch }}/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }} >/dev/null 2>&1; then
            echo "❌ Binary is dynamically linked, which is unexpected."
            exit 1
          else
            echo "✅ Binary is statically linked."
          fi
        shell: bash


      # New Step: Compress Binary with UPX Using phillarmonic/upx Docker Image
      - name: Compress Binary with UPX Using Docker
        run: |
          # Define variables for easier access
          BINARY_PATH="dist/${{ matrix.goos }}-${{ matrix.goarch }}/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }}"
          ARCH="${{ matrix.goarch }}"

          # Run UPX using the phillarmonic/upx Docker image
          docker run --rm \
            -v "${{ github.workspace }}/dist/${{ matrix.goos }}-${{ matrix.goarch }}":/app \
            phillarmonic/upx \
            upx --best /app/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }}
        shell: bash

      # Optional: Verify UPX Compression Integrity
      - name: Verify UPX Compression
        run: |
          file dist/${{ matrix.goos }}-${{ matrix.goarch }}/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }}
          upx -t dist/${{ matrix.goos }}-${{ matrix.goarch }}/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }}
        shell: bash

      - name: Test Binary
        run: |
          chmod +x ./dist/${{ matrix.goos }}-${{ matrix.goarch }}/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }}
          # Determine the architecture and set the appropriate QEMU command
          if [ "${{ matrix.goarch }}" = "arm64" ]; then
            qemu-aarch64 ./dist/${{ matrix.goos }}-${{ matrix.goarch }}/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }} aptible/supercronic
          else
            ./dist/${{ matrix.goos }}-${{ matrix.goarch }}/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }} aptible/supercronic
          fi
        shell: bash

      - name: Upload build artifacts (on failure)
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: dist/${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        if: success()
        with:
          files: dist/${{ matrix.goos }}-${{ matrix.goarch }}/gitrelease-${{ matrix.goos }}-${{ matrix.goarch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
